/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SanityImport } from './routes/sanity'
import { Route as RoomsImport } from './routes/rooms'
import { Route as RewardsImport } from './routes/rewards'
import { Route as MonstersImport } from './routes/monsters'
import { Route as ModifiersImport } from './routes/modifiers'
import { Route as CraftingImport } from './routes/crafting'
import { Route as CorruptionImport } from './routes/corruption'
import { Route as ChronicleImport } from './routes/chronicle'
import { Route as ModifiersGameImport } from './routes/modifiers.game'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SanityRoute = SanityImport.update({
  path: '/sanity',
  getParentRoute: () => rootRoute,
} as any)

const RoomsRoute = RoomsImport.update({
  path: '/rooms',
  getParentRoute: () => rootRoute,
} as any)

const RewardsRoute = RewardsImport.update({
  path: '/rewards',
  getParentRoute: () => rootRoute,
} as any)

const MonstersRoute = MonstersImport.update({
  path: '/monsters',
  getParentRoute: () => rootRoute,
} as any)

const ModifiersRoute = ModifiersImport.update({
  path: '/modifiers',
  getParentRoute: () => rootRoute,
} as any)

const CraftingRoute = CraftingImport.update({
  path: '/crafting',
  getParentRoute: () => rootRoute,
} as any)

const CorruptionRoute = CorruptionImport.update({
  path: '/corruption',
  getParentRoute: () => rootRoute,
} as any)

const ChronicleRoute = ChronicleImport.update({
  path: '/chronicle',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ModifiersGameRoute = ModifiersGameImport.update({
  path: '/game',
  getParentRoute: () => ModifiersRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/chronicle': {
      preLoaderRoute: typeof ChronicleImport
      parentRoute: typeof rootRoute
    }
    '/corruption': {
      preLoaderRoute: typeof CorruptionImport
      parentRoute: typeof rootRoute
    }
    '/crafting': {
      preLoaderRoute: typeof CraftingImport
      parentRoute: typeof rootRoute
    }
    '/modifiers': {
      preLoaderRoute: typeof ModifiersImport
      parentRoute: typeof rootRoute
    }
    '/monsters': {
      preLoaderRoute: typeof MonstersImport
      parentRoute: typeof rootRoute
    }
    '/rewards': {
      preLoaderRoute: typeof RewardsImport
      parentRoute: typeof rootRoute
    }
    '/rooms': {
      preLoaderRoute: typeof RoomsImport
      parentRoute: typeof rootRoute
    }
    '/sanity': {
      preLoaderRoute: typeof SanityImport
      parentRoute: typeof rootRoute
    }
    '/modifiers/game': {
      preLoaderRoute: typeof ModifiersGameImport
      parentRoute: typeof ModifiersImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ChronicleRoute,
  CorruptionRoute,
  CraftingRoute,
  ModifiersRoute.addChildren([ModifiersGameRoute]),
  MonstersRoute,
  RewardsRoute,
  RoomsRoute,
  SanityRoute,
])

/* prettier-ignore-end */
