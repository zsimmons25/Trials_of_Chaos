version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/usr/share/nginx/html/images:ro
    networks:
      - chaos-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

  frontend:
    build: 
      context: ./Trials_of_Chaos
      dockerfile: dockerfile
      args:
        - VITE_UXMAL=/api
      target: nginx
    expose:
      - "80"
    image: trials-of-chaos-frontend
    networks:
      - chaos-network
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  backend:
    build:
      context: ./Uxmal
    image: trials-of-chaos-backend
    expose:
      - "3500"
    networks:
      - chaos-network
    depends_on:
      - mysql
    restart: unless-stopped
    environment:
      - MYSQL_USER=root
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - port_=3500
      - CORS_ORIGIN=https://trialsofchaos.com

  mysql:
    image: mysql:8
    volumes:
      - mysql-data:/var/lib/mysql
      - ./Uxmal/schemas/modifiers.sql:/docker-entrypoint-initdb.d/01-init-modifiers.sql
      - ./Uxmal/schemas/monsters.sql:/docker-entrypoint-initdb.d/02-init-monsters.sql
      - ./Uxmal/schemas/affixes.sql:/docker-entrypoint-initdb.d/03-init-affixes.sql
      - ./Uxmal/schemas/items.sql:/docker-entrypoint-initdb.d/04-init-items.sql
      - ./Uxmal/schemas/enchants.sql:/docker-entrypoint-initdb.d/05-init-enchants.sql
    networks:
      - chaos-network
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=chaos

volumes:
  mysql-data:

networks:
  chaos-network:
    driver: bridge